name: Gradle CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build JAR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Grant execute permissions to gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Build JAR
        run: ./gradlew build -x test
        env:
          GRADLE_USER_HOME: ${{ github.workspace }}/.gradle
      
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: application-jar
          path: build/libs/*.jar

  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build  # The deploy job now depends on the build job
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: application-jar
          path: ./build/libs
      
      - name: List files after download
        run: ls -la ./build/libs/
      
      - name: Deploy and Verify Application
        env:
          SERVER_HOST: 89.250.70.43
          SERVER_USER: root
          SERVER_PASSWORD: Kyrgyzstanym01!
        run: |
          # Install sshpass
          sudo apt-get update && sudo apt-get install -y sshpass
          
          # Deploy the JAR
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "mkdir -p /opt/trpo"
          sshpass -p "$SERVER_PASSWORD" scp -o StrictHostKeyChecking=no ./build/libs/travel-0.0.1-SNAPSHOT.jar $SERVER_USER@$SERVER_HOST:/opt/trpo/
          
          # Restart service and verify
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "
            # Stop the service
            sudo systemctl stop test.service
            
            # Set permissions
            chmod 755 /opt/trpo/travel-0.0.1-SNAPSHOT.jar
            
            # Start the service
            sudo systemctl start test.service
            
            # Wait for application to start (adjust timeout as needed)
            echo 'Waiting for application to start...'
            sleep 120
            
            # Check if service is running
            if ! systemctl is-active --quiet test.service; then
              echo 'Service failed to start'
              journalctl -u test.service -n 50
              exit 1
            fi
            
            # Check if process is running and listening on port (adjust port number)
            if ! netstat -tulpn | grep :8080; then
              echo 'Application is not listening on port 8080'
              journalctl -u test.service -n 50
              exit 1
            fi
            
            # Check if application logs show successful startup
            if ! journalctl -u test.service -n 50 | grep -i 'Started .* in .* seconds'; then
              echo 'Application startup message not found in logs'
              journalctl -u test.service -n 50
              exit 1
            fi
  
            echo 'Application deployed and verified successfully'
          "
